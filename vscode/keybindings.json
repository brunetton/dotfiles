// Placez vos combinaisons de touches dans ce fichier pour remplacer les valeurs par d√©faut
[
    {
        "key": "ctrl+m",
        "command": "-editor.action.toggleTabFocusMode"
    },
    {
        "key": "ctrl+shift+m",
        "command": "markdown.showPreviewToSide",
        "when": "editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+k v",
        "command": "-markdown.showPreviewToSide",
        "when": "editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+shift+v",
        "command": "-markdown.showPreview",
        "when": "editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+m",
        "command": "editor.action.jumpToBracket"
    },
    {
        "key": "ctrl+shift+i",
        "command": "editor.action.formatDocument",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+i",
        "command": "-editor.action.formatDocument",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+j",
        "command": "editor.action.joinLines"
    },
    {
        "key": "ctrl+j",
        "command": "-workbench.action.togglePanel"
    },
    {
        "key": "ctrl+[Period]",
        "command": "editor.action.commentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+[Period]",
        "command": "-editor.action.commentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+alt+d",
        "command": "git.openChange",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k ctrl+0",
        "command": "editor.foldAll",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k ctrl+j",
        "command": "editor.fold",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k ctrl+l",
        "command": "editor.unfold",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+g shift+[Comma]",
        "command": "-gitlens.diffWithNext",
        "when": "editorTextFocus && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /tracked/"
    },
    {
        "key": "ctrl+shift+g [KeyM]",
        "command": "-gitlens.diffWithPrevious",
        "when": "editorTextFocus && !isInDiffEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /tracked/"
    },
    {
        "key": "ctrl+shift+g [KeyM]",
        "command": "-gitlens.diffWithPreviousInDiff",
        "when": "isInDiffEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /tracked/"
    },
    {
        "key": "ctrl+shift+g shift+w",
        "command": "-gitlens.diffWithWorking",
        "when": "editorTextFocus && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /tracked/"
    },
    {
        "key": "ctrl+shift+g ctrl+shift+alt+w",
        "command": "-gitlens.diffLineWithPrevious",
        "when": "editorTextFocus && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /tracked/"
    },
    {
        "key": "ctrl+shift+g [IntlBackslash]",
        "command": "-gitlens.diffLineWithPrevious",
        "when": "editorTextFocus && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /tracked/"
    },
    {
        "key": "ctrl+shift+g w",
        "command": "-gitlens.diffLineWithWorking",
        "when": "editorTextFocus && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /tracked/"
    },
    {
        "key": "ctrl+shift+g shift+[Period]",
        "command": "-gitlens.showCommitSearch",
        "when": "gitlens:enabled && config.gitlens.keymap == 'chorded'"
    },
    {
        "key": "ctrl+shift+g c",
        "command": "-gitlens.showQuickCommitFileDetails",
        "when": "editorTextFocus && gitlens:enabled && config.gitlens.keymap == 'chorded'"
    },
    {
        "key": "ctrl+shift+g shift+h",
        "command": "-gitlens.showQuickRepoHistory",
        "when": "gitlens:enabled && config.gitlens.keymap == 'chorded'"
    },
    {
        "key": "ctrl+shift+g h",
        "command": "-gitlens.showQuickFileHistory",
        "when": "gitlens:enabled && config.gitlens.keymap == 'chorded'"
    },
    {
        "key": "ctrl+shift+g 6",
        "command": "-gitlens.showLastQuickPick",
        "when": "gitlens:enabled && config.gitlens.keymap == 'chorded'"
    },
    {
        "key": "ctrl+shift+g s",
        "command": "-gitlens.showQuickRepoStatus",
        "when": "gitlens:enabled && config.gitlens.keymap == 'chorded'"
    },
    {
        "key": "ctrl+shift+g g",
        "command": "-workbench.view.scm",
        "when": "gitlens:enabled && config.gitlens.keymap == 'chorded'"
    },
    {
        "key": "ctrl+shift+g b",
        "command": "-gitlens.toggleFileBlame",
        "when": "editorTextFocus && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /blameable/"
    },
    {
        "key": "ctrl+shift+g shift+b",
        "command": "-gitlens.toggleCodeLens",
        "when": "editorTextFocus && gitlens:canToggleCodeLens && gitlens:enabled && config.gitlens.keymap == 'chorded'"
    },
    {
        "key": "alt+left",
        "command": "workbench.action.navigateBack"
    },
    {
        "key": "ctrl+alt+j",
        "command": "-liveshare.join",
        "when": "liveshare:state != 'Joined' && liveshare:state != 'Shared'"
    },
    {
        "key": "ctrl+shift+6",
        "command": "-workbench.action.navigateForward"
    },
    {
        "key": "alt+right",
        "command": "-gitlens.key.right",
        "when": "gitlens:key:right"
    },
    {
        "key": "alt+right",
        "command": "-workbench.action.terminal.focusNextPane",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+8",
        "command": "-workbench.action.navigateForward"
    },
    {
        "key": "alt+right",
        "command": "workbench.action.navigateForward"
    },
    {
        "key": "ctrl+l",
        "command": "-loremWhatever.loremDefault",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+l",
        "command": "-loremWhatever.loremDefault",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+l",
        "command": "-loremWhatever.loremDefault",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+l",
        "command": "-loremWhatever.loremDefault",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+l",
        "command": "-loremWhatever.loremDefault",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+l",
        "command": "-loremWhatever.loremDefault",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+l",
        "command": "-loremWhatever.loremDefault",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+l",
        "command": "-loremWhatever.loremDefault",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+l",
        "command": "-loremWhatever.loremDefault",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+l",
        "command": "-loremWhatever.loremDefault",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+l",
        "command": "-loremWhatever.loremDefault",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+l",
        "command": "-loremWhatever.loremDefault",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+l",
        "command": "-notebook.centerActiveCell",
        "when": "notebookEditorFocused && activeEditor == 'workbench.editor.notebook'"
    }
]